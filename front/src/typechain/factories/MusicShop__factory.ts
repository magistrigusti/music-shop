/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MusicShop, MusicShopInterface } from "../MusicShop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AlbumBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "albumUid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "OrderDelivered",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "addAlbum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "albums",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allAlbums",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
        ],
        internalType: "struct MusicShop.Album[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentOrderId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delivered",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "albumUid",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "orderedAt",
        type: "uint256",
      },
      {
        internalType: "enum MusicShop.OrderStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b50604051610de3380380610de3833981016040819052602b91604f565b600480546001600160a01b0319166001600160a01b0392909216919091179055607a565b5f60208284031215605e575f5ffd5b81516001600160a01b03811681146073575f5ffd5b9392505050565b610d5c806100875f395ff3fe608060405260043610610089575f3560e01c8063925931fc11610058578063925931fc1461019d578063a85c38ef146101b2578063d96a094a146101e2578063ea5df059146101f5578063ec34297a14610225576100f3565b806326987b60146101005780634b5e4108146101285780636526deb1146101475780638da5cb5b14610166576100f3565b366100f35760405162461bcd60e51b815260206004820152602f60248201527f506c656173652075736520746865206275792066756e6374696f6e20746f207060448201526e7572636861736520616c62756d732160881b60648201526084015b60405180910390fd5b3480156100fe575f5ffd5b005b34801561010b575f5ffd5b5061011560025481565b6040519081526020015b60405180910390f35b348015610133575f5ffd5b506100fe61014236600461096e565b610246565b348015610152575f5ffd5b506100fe610161366004610985565b610361565b348015610171575f5ffd5b50600454610185906001600160a01b031681565b6040516001600160a01b03909116815260200161011f565b3480156101a8575f5ffd5b5061011560035481565b3480156101bd575f5ffd5b506101d16101cc36600461096e565b610478565b60405161011f959493929190610a21565b6100fe6101f036600461096e565b6104c4565b348015610200575f5ffd5b5061021461020f36600461096e565b610711565b60405161011f959493929190610ab4565b348015610230575f5ffd5b506102396107d7565b60405161011f9190610ae6565b6004546001600160a01b031633146102905760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f776e65722160981b60448201526064016100ea565b5f600182815481106102a4576102a4610b7e565b5f918252602090912060059091020190506001600482015460ff1660018111156102d0576102d0610a0d565b0361030e5760405162461bcd60e51b815260206004820152600e60248201526d696e76616c69642073746174757360901b60448201526064016100ea565b60048101805460ff191660019081179091556002820154908201546040516001600160a01b03909216917f5bb66d85e0b78294f5d62dcc373c22e3d67e643b319cba2fba58c8180008220b905f90a35050565b6004546001600160a01b031633146103ab5760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f776e65722160981b60448201526064016100ea565b5f6040518060a00160405280600254815260200187815260200186868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250938552505050602080830187905260409283018690528454600181810187559583529181902084516005909302019182558301519381019390935581015190919060028201906104469082610c2a565b506060820151600382015560809091015160049091015560028054905f61046c83610cf9565b91905055505050505050565b60018181548110610487575f80fd5b5f9182526020909120600590910201805460018201546002830154600384015460049094015492945090926001600160a01b039091169160ff1685565b5f5f82815481106104d7576104d7610b7e565b905f5260205f2090600502019050806003015434146105285760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b60448201526064016100ea565b5f81600401541161056b5760405162461bcd60e51b815260206004820152600d60248201526c6f7574206f662073746f636b2160981b60448201526064016100ea565b600481018054905f61057c83610d11565b90915550506040805160a0810182526003548152600183810154602083019081523393830193845242606084019081525f608085018181528454808601865591859052855160059092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810192835593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf785015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8840180546001600160a01b039092166001600160a01b031990921691909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf983015593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa90910180549394939192909160ff19169083818111156106c1576106c1610a0d565b0217905550506003805491505f6106d783610cf9565b90915550506001810154604051429133917f428114751c1b5d2334d5f2464a79219ffc3a15d4a23042756994f6337fdccc17905f90a45050565b5f818154811061071f575f80fd5b905f5260205f2090600502015f91509050805f01549080600101549080600201805461074a90610ba6565b80601f016020809104026020016040519081016040528092919081815260200182805461077690610ba6565b80156107c15780601f10610798576101008083540402835291602001916107c1565b820191905f5260205f20905b8154815290600101906020018083116107a457829003601f168201915b5050505050908060030154908060040154905085565b5f80546060918167ffffffffffffffff8111156107f6576107f6610b92565b60405190808252806020026020018201604052801561085557816020015b6108426040518060a001604052805f81526020015f8152602001606081526020015f81526020015f81525090565b8152602001906001900390816108145790505b5090505f5b82811015610967575f818154811061087457610874610b7e565b905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820180546108ae90610ba6565b80601f01602080910402602001604051908101604052809291908181526020018280546108da90610ba6565b80156109255780601f106108fc57610100808354040283529160200191610925565b820191905f5260205f20905b81548152906001019060200180831161090857829003601f168201915b505050505081526020016003820154815260200160048201548152505082828151811061095457610954610b7e565b602090810291909101015260010161085a565b5092915050565b5f6020828403121561097e575f5ffd5b5035919050565b5f5f5f5f5f60808688031215610999575f5ffd5b85359450602086013567ffffffffffffffff8111156109b6575f5ffd5b8601601f810188136109c6575f5ffd5b803567ffffffffffffffff8111156109dc575f5ffd5b8860208284010111156109ed575f5ffd5b959860209190910197509495604081013595606090910135945092505050565b634e487b7160e01b5f52602160045260245ffd5b858152602081018590526001600160a01b03841660408201526060810183905260a0810160028310610a6157634e487b7160e01b5f52602160045260245ffd5b8260808301529695505050505050565b5f81518084525f5b81811015610a9557602081850181015186830182015201610a79565b505f602082860101526020601f19601f83011685010191505092915050565b85815284602082015260a060408201525f610ad260a0830186610a71565b606083019490945250608001529392505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015610b7257603f1987860301845281518051865260208101516020870152604081015160a06040880152610b4660a0880182610a71565b606083810151908901526080928301519290970191909152506020938401939190910190600101610b0c565b50929695505050505050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680610bba57607f821691505b602082108103610bd857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610c2557805f5260205f20601f840160051c81016020851015610c035750805b601f840160051c820191505b81811015610c22575f8155600101610c0f565b50505b505050565b815167ffffffffffffffff811115610c4457610c44610b92565b610c5881610c528454610ba6565b84610bde565b6020601f821160018114610c8a575f8315610c735750848201515b5f19600385901b1c1916600184901b178455610c22565b5f84815260208120601f198516915b82811015610cb95787850151825560209485019460019092019101610c99565b5084821015610cd657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b5f60018201610d0a57610d0a610ce5565b5060010190565b5f81610d1f57610d1f610ce5565b505f19019056fea26469706673582212200562b0f9beeea303566713922c2176b6b409d96e5fd4a2225ac789880e5322c364736f6c634300081c0033";

type MusicShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MusicShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MusicShop__factory extends ContractFactory {
  constructor(...args: MusicShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      MusicShop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MusicShop__factory {
    return super.connect(runner) as MusicShop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MusicShopInterface {
    return new Interface(_abi) as MusicShopInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MusicShop {
    return new Contract(address, _abi, runner) as unknown as MusicShop;
  }
}
